<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical" width="100%" height="100%" creationComplete="init()" xmlns:controls="com.sephiroth.controls.*" xmlns:mycomponents="org.utmost.mycomponents.*">
	<mx:Script>
		<![CDATA[  
			import mx.events.CloseEvent;
			import mx.events.TreeEvent;
			import flash.trace.Trace;
			import org.utmost.service.UtmostService;
			import mx.controls.Alert;
			import mx.collections.ArrayCollection;
			import mx.collections.XMLListCollection;
			import mx.events.ListEvent;
			import mx.rpc.events.ResultEvent;
			import org.utmost.util.ComponentUtil;
			
			//全局变量
			public var tableName:String="U_PORTAL_REFROLEUSER";
			public var redUUID:String="roleuuid";
			public var redName:String="rolename";
			public var redCode:String="rolecode";
			public var blueUUID:String="useruuid";
			public var blueName:String="username";
			public var blueCode:String="usercode";
			
			private var roles:ArrayCollection;	//用户组集合
			
			private var operates_view:ArrayCollection;	//操作项集合
			
			private var delList:ArrayCollection = new ArrayCollection();	//保存需要删除的节点
			private	var addList:ArrayCollection = new ArrayCollection();	//保存需要新增的节点
			
			private var saveAC:ArrayCollection;	//保存使用
			
			private var changed:Boolean = false;	//当前是否有需要保存的变更操作
			
			private var nowSelectedItem:Object;	//当前选中的用户组节点
			
			/**
			 * 页面初始化
			 * */
			private function init():void {
				changed = false;
				initGroup();
				initOperate();
			}
			
			/**
			 * 以XML形式返回树的数据源对象
			 * */
			private function getDataProvider(_tree:Tree):XMLList {
				var o:XMLListCollection=_tree.dataProvider as XMLListCollection;
				var xmllist:XMLList=o.source as XMLList;
				return xmllist;
			}
			/**
			 * 保存
			 * */
			private function submit():void {
				addList = null;
		    	addList = new ArrayCollection();
		    	delList = null;
		    	delList = new ArrayCollection();
				findXML(getDataProvider(blueTree));
				
				var submitObj:Object = new Object();
				submitObj.addList = addList;
				submitObj.delList = delList;
				var ut:UtmostService = new UtmostService("RightService",function(e:ResultEvent):void{
					if(e.result == 0){
						Alert.show("Data have been saved.");
						initFunc();
					}else{
						Alert.show("Error: The operation is not accepted.");
					}
				});
				ut.ro.saveOperationRight(submitObj);
			}
			
			private function findXML(xmllist:XMLList):void {
				for each(var x:XML in xmllist) {
					if(x.@funcuuid != "-1"){
						trace("########### "+x.@funcuuid);
						if(x.@exist!=null && x.@exist=="true"){
							if(x.@checked=="0" || x.@checked==null || x.@checked==""){
								trace("DEL: "+x.@checked+"====="+x.@funcname);
								var refObj:Object = new Object();
					    		refObj.uuid = x.@refuuid.toString();
					    		refObj.funcuuid = x.@funcuuid.toString();
					    		delList.addItem(refObj);
							}
						}else{
							if(x.@checked=="1" || x.@checked=="2"){
								trace("!!!!!"+x.@checked);
								trace("ADD:"+x.@checked+"====="+x.@funcname);
								var refObj:Object = new Object();
					    		refObj.funcuuid = x.@funcuuid.toString();
					    		refObj.funccode = x.@funccode.toString();
					    		refObj.funcname = x.@funcname.toString();
					    		if(x.@functype == "2"){
					    			refObj.operateuuid = operateBox.selectedItem.data;	//功能树
//									refObj.operateuuid = "1";
					    		}else{
					    			refObj.operateuuid = operateBox.selectedItem.data;	//目录树
					    		}
					    		refObj.roleuuid = nowSelectedItem.uuid;
					    		refObj.rolecode = nowSelectedItem.rolecode;
					    		refObj.rolename = nowSelectedItem.rolename;
					    		addList.addItem(refObj);
							}
						}
					}
					if(x.children()!=null && x.children().length()>0){
						findXML(x.children());
					}
				}
			}
			
			/**
			 * 点击树节点句柄函数
			 * */
			private function treeClick(e:ListEvent):void {
				
				if(changed){	//如果当前有需要保存的变更操作
					Alert.yesLabel=resourceManager.getString("errormsg", "yes");
					Alert.noLabel=resourceManager.getString("errormsg", "no");
					Alert.show(resourceManager.getString("errormsg", "saveconfigchange"), resourceManager.getString("errormsg", "alert"), 3, this, function(e:CloseEvent):void{
						if (e.detail == Alert.YES){	//保存后跳转
							submit();
						}else{	//不保存 直接跳转
							showRoleOperFuncs();	//直接跳转
							return;
						}
					});
					changed = false;
				}else{	//如果当前没有需要保存的变更操作
					showRoleOperFuncs();	//直接跳转
				}
			}
			
			/**
			 * 显示用户组操作func节点关联树
			 * */
			private function showRoleOperFuncs():void{
				var ut_rolefunc:UtmostService = new UtmostService("RightService",function(e:ResultEvent):void{
					blueTree.dataProvider = e.result;
				});
				ut_rolefunc.ro.queryRoleOperFuncs(redTree.selectedItem.uuid, operateBox.selectedItem.data);
				nowSelectedItem = redTree.selectedItem;
			}
			
			/**
			 * 查询用户组
			 * */
			private function initGroup():void {
				var ut:UtmostService = new UtmostService("RightService",function(e:ResultEvent):void{
					roles = ArrayCollection(e.result);
					redTree.dataProvider = roles;
					callLater(function():void {
						ComponentUtil.ocAllTree(redTree);//全部打开/关闭tree节点
						//redTree.selectedIndex=defaultSelectedIndex;//设置Tree到上次选择状态
						//AutoUtil.clearValue(form);
					});
				});
				ut.ro.queryPortalRoles();
		    }
		    
		    /**
		     * 初始化目录树和功能树
		     * */
		    private function initFunc():void{
		    	
		    	addList = null;
		    	addList = new ArrayCollection();
		    	delList = null;
		    	delList = new ArrayCollection();
		    	
		    	var ut_func:UtmostService = new UtmostService("RightService",function(e:ResultEvent):void{
					blueTree.dataProvider = e.result;
					callLater(function():void {
						nowSelectedItem = redTree.selectedItem;	//记录当前选中节点
						changed = false;
						//ComponentUtil.ocAllTree(blueTree);//全部打开/关闭tree节点
						//redTree.selectedIndex=defaultSelectedIndex;//设置Tree到上次选择状态
						//AutoUtil.clearValue(form);
					});
				});
				ut_func.ro.queryRoleOperFuncs(redTree.selectedItem.uuid, operateBox.selectedItem.data);
		    }
		    
		    /**
		     * 初始化操作项 
		     * */
		    private function initOperate():void{
		    	
		    	var ut_oper:UtmostService = new UtmostService("RightService",function(e:ResultEvent):void{
					
					var operates:ArrayCollection = ArrayCollection(e.result);
					
					operates_view = new ArrayCollection();
					
					for(var i:int=0; i<operates.length; i++){
						var operate:Object = new Object();
						operate.label = operates.getItemAt(i).operate_name;
						operate.data = operates.getItemAt(i).uuid;
						operates_view.addItem(operate);
					}
					
					operateBox.dataProvider = operates_view;
				});
				ut_oper.ro.queryOperates();
		    }
		    
			/**
			 * 生成树节点的LABEL后缀
			 * */
			private function setOperateStr(item:Object):String{
				var ops:String = item.@ops.toString();
				if(item.@functype!=null){
					var functype:String = item.@functype.toString();
					
					if(functype!=null && functype=="2"&&item.@funcdesc!=null){
						return item.@funcdesc.toString();
					}
				}
				if(ops!=null && ops!=""){
					ops = "【"+ops+"】";
				}
				
				return item.@funcname + " " + ops;
			}
		]]>
	</mx:Script>
	<mx:XML id="blueTreeData" source="xml/FileSystemTreeData.xml" />
	
	<mx:Metadata>
        [ResourceBundle("auth")]
    </mx:Metadata>
	
	<mx:Sequence id="shake" target="{hbox}" duration="100" repeatCount="2">
        <mx:Move xBy="15"/>
        <mx:Move xBy="-15"/>
    </mx:Sequence>
    <mx:TabNavigator width="100%" height="100%">
    	<mx:VBox label="Operation Right" width="100%" height="100%" >
			<mx:HBox id="hbox" width="100%" height="90%" paddingLeft="20" paddingRight="20" verticalAlign="middle" horizontalAlign="center" horizontalGap="20">
					<mx:VBox height="100%" width="30%">
					<mx:Label visible="false" />
						<mx:Tree id="redTree" width="100%" height="100%" labelField="rolename" itemClick="treeClick(event)">
						</mx:Tree>
					</mx:VBox>
					<mx:VBox height="100%" width="70%">
						<mx:HBox width="100%">
							<mx:Label text="View options:" />
							<mx:ComboBox id="operateBox" change="blueTree.dataProvider=null;" />
							<mycomponents:Components_LinkButton iconType="right" label="{resourceManager.getString('auth','save')}" click="submit()"/>	
						</mx:HBox>
						<controls:TreeCheckBox id="blueTree" showRoot="false" labelField="@funcname" itemCheck="{blueTree.onItemCheck(event); changed=true;}"
					 width="100%" height="100%"  checkField="@checked" labelFunction="setOperateStr" />
					</mx:VBox>
			</mx:HBox>
		</mx:VBox>
	</mx:TabNavigator>
</mx:Module>
